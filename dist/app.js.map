{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","handlebars","registerHelper","process","env","NODE_ENV","date_before","dateUTC","Date","getTime","dateIST","setHours","getHours","setMinutes","getMinutes","toString","mongoose","connect","mongo_uri","useFindAndModify","useNewUrlParser","useUnifiedTopology","useCreateIndex","then","console","log","err","app","set","path","join","__dirname","use","express","json","urlencoded","extended","homeRouter","usersRouter","postRouter","req","res","next","locals","message","error","get","status","render","module","exports"],"mappings":"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","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\nimport handlebars from 'hbs';\nimport dotenv from 'dotenv';\ndotenv.config();\n\nhandlebars.registerHelper('URL',()=>{\n    if(process.env.NODE_ENV === 'devlopment'){\n        return 'http://localhost:3000'\n    }else{\n        return 'https://candor-app.herokuapp.com'\n    }\n})\nhandlebars.registerHelper(\"printDate\", function(date_before) {\n\n    let dateUTC = new Date(date_before);\n    dateUTC = dateUTC.getTime();\n    let dateIST = new Date(dateUTC);\n    //date shifting for IST timezone (+5 hours and 30 minutes)\n    dateIST.setHours(dateIST.getHours() + 5);\n    dateIST.setMinutes(dateIST.getMinutes() + 30);\n    return dateIST.toString();\n});\nmongoose.connect(process.env.mongo_uri, {\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true\n})\n    .then(console.log('DB connected successfully'))\n    .catch(err => console.log(err));\n\nimport homeRouter from './routes/home';\nimport usersRouter from './routes/users';\nimport postRouter from './routes/post';\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', homeRouter);\napp.use('/users', usersRouter);\napp.use('/post', postRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nmodule.exports = app;\n"],"file":"app.js"}