{"version":3,"sources":["../src/app.js"],"names":["createError","require","express","path","cookieParser","logger","mongoose","handlebars","config","registerHelper","process","env","NODE_ENV","date_before","dateUTC","Date","getTime","dateIST","setHours","getHours","setMinutes","getMinutes","toString","connect","mongo_uri","useFindAndModify","useNewUrlParser","useUnifiedTopology","useCreateIndex","then","console","log","err","homeRouter","usersRouter","postRouter","app","set","join","__dirname","use","json","urlencoded","extended","req","res","next","locals","message","error","get","status","render","module","exports"],"mappings":"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","sourcesContent":["var createError = require('http-errors');\nvar express = require('express');\nvar path = require('path');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar mongoose = require('mongoose');\nconst handlebars = require('hbs');\n\n\nrequire('dotenv').config();\nhandlebars.registerHelper('URL',()=>{\n    if(process.env.NODE_ENV === 'devlopment'){\n        return 'http://localhost:3000'\n    }else{\n        return 'https://candor-app.herokuapp.com'\n    }\n})\nhandlebars.registerHelper(\"printDate\", function(date_before) {\n\n    var dateUTC = new Date(date_before);\n    var dateUTC = dateUTC.getTime();\n    var dateIST = new Date(dateUTC);\n    //date shifting for IST timezone (+5 hours and 30 minutes)\n    dateIST.setHours(dateIST.getHours() + 5);\n    dateIST.setMinutes(dateIST.getMinutes() + 30);\n    return dateIST.toString();\n});\nmongoose.connect(process.env.mongo_uri, {\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true\n})\n    .then(console.log('DB connected successfully'))\n    .catch(err => console.log(err));\n\nvar homeRouter = require('./routes/home');\nvar usersRouter = require('./routes/users');\nvar postRouter = require('./routes/post');\n\nvar app = express();\n\n\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', homeRouter);\napp.use('/users', usersRouter);\napp.use('/post', postRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nmodule.exports = app;\n"],"file":"app.js"}