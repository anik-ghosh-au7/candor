{"version":3,"sources":["../src/app.js"],"names":["dotenv","config","handlebars","registerHelper","process","env","NODE_ENV","date_before","dateUTC","Date","curr_date","now","diff","seconds","parseInt","minutes","hours","days","context","JSON","stringify","value","length","slice","mongoose","connect","mongo_uri","useFindAndModify","useNewUrlParser","useUnifiedTopology","useCreateIndex","then","console","log","err","app","set","path","join","__dirname","use","express","json","urlencoded","extended","homeRouter","usersRouter","postRouter","chatRouter","messageRouter","req","res","next","locals","message","error","get","status","render","webpush","setVapidDetails","public_vapid_key","private_vapid_key","module","exports"],"mappings":"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","sourcesContent":["import createError from 'http-errors';\nimport express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport logger from 'morgan';\nimport mongoose from 'mongoose';\nimport handlebars from 'hbs';\nimport dotenv from 'dotenv';\nimport webpush from 'web-push';\ndotenv.config();\n\nhandlebars.registerHelper('URL',()=>{\n    if(process.env.NODE_ENV === 'devlopment'){\n        return 'http://localhost:3000'\n    }else{\n        return 'https://candor-app.herokuapp.com'\n    }\n})\nhandlebars.registerHelper(\"printDate\", function(date_before) {\n\n    let dateUTC = new Date(date_before);\n    let curr_date= Date.now();\n    let diff= curr_date-dateUTC;\n\n    let  seconds = parseInt(diff / 1000);\n    let minutes = parseInt(seconds / 60);\n    let hours = parseInt(minutes / 60);\n    let days = parseInt(hours / 24);\n    if(days>=1){\n        if(days==1){\n            return days+\" day ago\"\n        }\n        return days+\" days ago\"\n    }else if(hours>=1){\n        if(hours==1){\n            return \"one hour ago\"\n        }\n        return hours+\" hours ago\"\n    }else if(minutes>=1){\n        if(minutes==1){\n            return  \"one minute ago\"\n        }\n        return minutes +\" minutes ago\"\n    }else{\n        return \"less than a minute ago\"\n    }\n    // return diff.toString();\n    // let dateIST = new Date(dateUTC);\n    // //date shifting for IST timezone (+5 hours and 30 minutes)\n    // dateIST.setHours(dateIST.getHours() + 5);\n    // dateIST.setMinutes(dateIST.getMinutes() + 30);\n    // return dateIST.toString();\n});\nhandlebars.registerHelper('json', function(context) {\n    return JSON.stringify(context);\n});\n\nhandlebars.registerHelper(\"inc\", function(value)\n{\n    return parseInt(value) + 1;\n});\n\nhandlebars.registerHelper(\"shorten\", function(value)\n{\n    return value.length < 50 ? value : value.slice(0, 47) + '...';\n});\n\nmongoose.connect(process.env.mongo_uri, {\n    useFindAndModify: false,\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n    useCreateIndex: true\n})\n    .then(console.log('DB connected successfully'))\n    .catch(err => console.log(err));\n\nimport homeRouter from './routes/home';\nimport usersRouter from './routes/users';\nimport postRouter from './routes/post';\nimport chatRouter from './routes/chat';\nimport messageRouter from './routes/message';\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'hbs');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({extended: false}));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', homeRouter);\napp.use('/users', usersRouter);\napp.use('/post', postRouter);\napp.use('/chat', chatRouter);\napp.use('/messages',messageRouter);\n\n// catch 404 and forward to error handler\napp.use(function (req, res, next) {\n    next(createError(404));\n});\n\n// error handler\napp.use(function (err, req, res, next) {\n    // set locals, only providing error in development\n    res.locals.message = err.message;\n    res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n    // render the error page\n    res.status(err.status || 500);\n    res.render('error');\n});\n\nwebpush.setVapidDetails(\n    \"mailto:app.candor@gmail.com\",\n    process.env.public_vapid_key,\n    process.env.private_vapid_key\n  );\n\nmodule.exports = app;\n"],"file":"app.js"}