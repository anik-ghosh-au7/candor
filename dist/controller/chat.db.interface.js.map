{"version":3,"sources":["../../src/controller/chat.db.interface.js"],"names":["dbInterface","userJoin","username","room","console","log","Chat","findOneAndUpdate","room_name","upsert","then","result","err","getChatHistory","aggregate","$match","$unwind","$group","$sort","$limit","res","getRoomUsers","findOne","active_users","room_users","saveChatHistory","text","time","userLeave","module","exports"],"mappings":"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","sourcesContent":["import Chat from '../model/chat.model';\nimport { contextsKey } from 'express-validator/src/base';\n\nlet dbInterface = {\n\n        // Join user to chat\n        userJoin: async function (username, room) {\n            console.log('ENTERED userJoin ');\n            await Chat.findOneAndUpdate({room_name: room},\n                {\n                    \"$addToSet\": {\n                        \"active_users\": username\n                    }\n                }, {upsert: true})\n                .then((result) => {\n                    console.log(`EXECUTED ${username} joined room ${room} `);\n\n                })\n                .catch(err => console.log(err));\n        },\n\n        //Load chat history\n        // getChatHistory: async function (room) {\n        //     return await Chat.findOne({room_name: room}, {chat_history: 1}).limit(5).then((res)=>{\n        //         console.log(res,'->from db interface history');\n        //         if(res){\n        //             return res;\n        //         }else{\n        //             return []\n        //         }\n        //     });\n        // },\n\n        getChatHistory: async function (room) {\n            return await Chat.aggregate([\n                {$match: {room_name: room}},\n                {$unwind: '$chat_history'},\n                {$group: {\"_id\": null, \"chats\": { \"$push\": \"$chat_history\" }}},\n                {$unwind: '$chats'},\n                {$sort: {'chats.time': -1}},\n                {$limit: 25},\n                {$sort: {'chats.time': 1}}\n            ]).then(res => {\n                console.log(\"inside DB interface\",res);\n                return res\n            }).catch(err => console.log(err));\n        },\n\n        // Get room users\n        getRoomUsers: async function (room) {\n            let room_users;\n            console.log('ENTERED getroomusers');\n            return await Chat.findOne({room_name: room})\n                .then(result => {\n                    console.log('EXECUTED', result.active_users);\n                    room_users = result.active_users;\n                    return result.active_users;\n                })\n                .catch(err => console.log(err));\n        },\n\n        //Saves chat messages to the database\n        saveChatHistory: async function (room, username, text, time) {\n            await Chat.findOneAndUpdate({room_name: room},\n                {\n                    \"$push\": {\n                        \"chat_history\": {\n                            username,\n                            time,\n                            text\n                        }\n                    }\n                }, {upsert: true})\n                .then((result) => {\n                    console.log(`chat history saved`);\n                })\n                .catch(err => console.log(err));\n        },\n        // User leaves chat\n        userLeave: async function (username, room) {\n            console.log('ENTERED user leave');\n            await Chat.findOneAndUpdate({room_name: room},\n                {\n                    \"$pull\": {\n                        \"active_users\": username\n                    }\n                })\n                .then((result) => {\n                    console.log(`EXECUTED ${username} left room ${room}`);\n                })\n                .catch(err => console.log(err));\n        },\n\n    }\n;\nmodule.exports = dbInterface;\n"],"file":"chat.db.interface.js"}