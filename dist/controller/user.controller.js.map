{"version":3,"sources":["../../src/controller/user.controller.js"],"names":["dotenv","config","dict","image_url","imageContent","user_controller","createUser","req","res","user","redirect","errors","body","email","OTP","status","send","isEmpty","json","array","file","originalname","buffer","content","cloudinary","uploader","upload","err","imageResponse","console","log","secure_url","bcrypt","hash","password","hashed_password","entry","User","username","phone","save","message","render","login","findOne","data","msg","compare","accessToken","jwt","sign","name","img","process","env","jwt_key","cookie","loginPage","signPage","request_otp","otp","generateOTP","clearInterval","clearOTP","main","nodemailer","createTestAccount","testAccount","transporter","createTransport","service","host","auth","email_otp_id","port","secure","pass","email_otp_password","sendMail","from","to","subject","text","html","info","then","error","submit_otp","query","removeSubscription","next","token","cookies","verify","subscription","findOneAndUpdate","$pull","logout","clearCookie","setSubscription","subToken","JSON","stringify","$addToSet","upsert","addFavourites","url","removeFavourites","getFavourites","result","favourites","favourite_urls","digits","i","Math","floor","random","key","setTimeout","module","exports"],"mappings":"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","sourcesContent":["import User from '../model/user.model';\nimport {validationResult} from 'express-validator';\nimport bcrypt from 'bcrypt';\nimport jwt from 'jsonwebtoken';\nimport nodemailer from 'nodemailer';\nimport dotenv from 'dotenv';\nimport cloudinary from '../utils/cloudinary';\nimport buff2Str from '../utils/convertBuffToStr';\nimport messageController from '../controller/message.controller';\ndotenv.config();\n\nlet dict = {};\nlet image_url;\nlet imageContent;\n\nconst user_controller = {\n    //\n    createUser: async (req, res) => {\n        if (req.user) {\n            return res.redirect('/');\n        }\n        const errors = validationResult(req);\n        if (!dict[req.body.email] || dict[req.body.email][0] !== req.body.OTP) {\n            return res.status(400).send('Wrong OTP ');\n        }\n\n        if (!errors.isEmpty()) {\n            return res.status(422).json({errors: errors.array()});\n        }\n        ;\n        if (req.file) {\n            imageContent = buff2Str(req.file.originalname, req.file.buffer).content;\n            await cloudinary.uploader.upload(imageContent, (err, imageResponse) => {\n                if (err) console.log(err);\n                else {\n                    image_url = imageResponse.secure_url;\n                    console.log('log from cloudinary', image_url)\n                }\n            });\n\n        }\n        try {\n            let hashed_password = await bcrypt.hash(req.body.password, 5);\n            let entry = new User({\n                username: req.body.username,\n                password: hashed_password,\n                email: req.body.email,\n                phone: req.body.phone,\n                image_url: image_url\n            });\n            if(!entry.image_url){\n                delete entry.image_url;\n            }\n            console.log(entry);\n            entry.save(function (err) {\n                if (err) {\n                    // not acceptable\n                    res.status(406).send(err.message);\n                } else {\n                    // created\n                    res.render('login');\n                }\n            });\n        } catch {\n            res.status(500).send('Internal error occured')\n        }\n        ;\n    },\n\n    login: (req, res) => {\n        if (req.user) {\n            return res.redirect('/');\n        }\n        let username = req.body.username;\n        let password = req.body.password;\n        User.findOne({username}, async (err, data) => {\n            if (err) {\n                // Internal server error\n                res.status(500).send({msg: \"Internal Server Error\"});\n            } else {\n                // OK\n                if (data) {\n                    try {\n                        if (await bcrypt.compare(password, data.password)) {\n                            const accessToken = jwt.sign({\n                                name: username,\n                                img: data.image_url,\n                                email: data.email,\n                                phone: data.phone\n                            }, process.env.jwt_key);\n                            // res.cookie('awtToken', accessToken, {maxAge: 9000000, httpOnly: true});\n                            res.cookie('awtToken', accessToken);\n                            return res.redirect('/');\n                        } else {\n                            res.status(401).send('Unauthorized access');\n                        }\n                    } catch (err) {\n                        console.log(err);\n                        res.status(400).send('Bad request');\n                    }\n                } else {\n                    // no data\n                    res.redirect('/');\n                }\n            };\n        });\n    },\n\n    loginPage: (req, res) => {\n        if (req.user) {\n            return res.redirect('/');\n        }\n        res.render('login');\n    },\n    signPage: (req, res) => {\n        if (req.user) {\n            return res.redirect('/');\n        }\n        res.render('signUp');\n    },\n    request_otp: (req, res) => {\n        let email = req.body.email;\n        let otp = generateOTP();\n        console.log(otp);\n        if (dict[email]) {\n            clearInterval(dict[email][1]);\n            delete dict[email];\n        }\n        dict[email] = [otp, clearOTP(dict, email)];\n\n        async function main() {\n            let testAccount = await nodemailer.createTestAccount();\n            let transporter = nodemailer.createTransport({\n                service: 'gmail',\n                host: 'smtp.gmail.com',\n                auth: {\n                    user: process.env.email_otp_id,\n                    port: 465,\n                    secure: true,\n                    pass: process.env.email_otp_password,\n                },\n            });\n\n            let info = await transporter.sendMail({\n                from: \"Candor \",\n                to: email,\n                subject: \"OTP from Candor\",\n                text: `For sign up to Candor, please use this OTP ${otp}. This OTP will be valid for 30 mins`, // plain text body\n                html: `<b><H2>For sign up, please use this OTP ${otp}</H2><br> OTP will be valid for 30 mins</b>` // html body\n            });\n        }\n\n        main().then(() => res.send('OTP sent')).catch(() => {\n            console.error();\n        })\n    },\n    submit_otp: (req, res) => {\n        let otp = req.query.otp;\n        let email = req.query.email;\n        if (dict[email] && dict[email][0] === otp) {\n            res.send('OTP verified')\n        } else {\n            res.send('Wrong OTP');\n        }\n    },\n    removeSubscription : (req, res, next) => {\n        const token = req.cookies['subToken'];\n            if (!token) {\n            next()\n        }else{\n            jwt.verify(token, process.env.jwt_key, (err, data) => {\n                if (err) return res.status(403).send({msg: 'Invalid token'});\n                console.log(req.user, data.subscription);\n                User.findOneAndUpdate({username: req.user}, {$pull: {subscription: data.subscription}})\n                .then(next())\n                .catch(err => console.log(err));\n        });\n        }\n    },\n    logout: (req, res) => {\n        res.clearCookie('awtToken');\n        res.clearCookie('subToken');\n        res.render('logged_out')\n    },\n    setSubscription: async (req, res) => {\n        const subToken = jwt.sign({\n            subscription: JSON.stringify(req.body)\n        }, process.env.jwt_key);\n        res.cookie('subToken', subToken);\n        User.findOneAndUpdate({username: req.user}, {$addToSet: {subscription: JSON.stringify(req.body)}}, {upsert: true})\n        // .then(() => res.status(201).send('subscribed'))\n        .then(() => res.status(201).json({}))\n        .catch(err => console.log(err));\n    },\n    addFavourites: (username, url) => {\n        User.findOneAndUpdate({username}, {\n            \"$push\": {\n                \"favourite_urls\": url\n            }\n        }, {upsert: true})\n        .then(() => {\n            console.log(`${url} added to ${username}'s favourites!!!`);\n            return;\n        })\n        .catch(err => console.log(err));\n    },\n    removeFavourites: (username, url) => {\n        User.findOneAndUpdate({username}, {\n                \"$pull\": {\n                    \"favourite_urls\": url\n                }\n            }, {new: true})\n            .then(() => {\n                console.log(`${url} removed from ${username}'s favourites!!!`);\n                return;\n            })\n            .catch(err => console.log(err));\n    },\n    getFavourites: (req, res) => {\n        User.findOne({username: req.user}).then(result => {\n            res.render('favourites', {username:  req.user, favourites: result.favourite_urls});\n        }).catch(err => console.error(err));\n    },\n\n\n};\n\n\nfunction generateOTP() {\n    let digits = '0123456789';\n    let OTP = '';\n    for (let i = 0; i < 6; i++) {\n        OTP += digits[Math.floor(Math.random() * 10)];\n    }\n    return OTP;\n}\n\nfunction clearOTP(dict, key) {\n    return setTimeout(() => {\n        delete dict[key];\n    }, 1000 * 60 * 30);\n}\n\nmodule.exports = user_controller;\n"],"file":"user.controller.js"}