{"version":3,"sources":["../../src/controller/friend.controller.js"],"names":["friend_controller","addFriend","req","res","flag","user","body","friend_username","send","User","findOne","username","then","result","err","console","error","i","friend_list","length","log","received_requests","search_result","findOneAndUpdate","$addToSet","sent_requests","title","messageController","handle_requests","respondToRequest","query","action","$pull","getAllFriends","render","module","exports"],"mappings":";;;;;;;;AAAA;;AACA;;AAGA,IAAMA,iBAAiB,GAAC;AAChBC,EAAAA,SAAS;AAAA,mGAAE,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,cAAAA,IADO,GACA,IADA;;AAAA,oBAGPF,GAAG,CAACG,IAAJ,KAAaH,GAAG,CAACI,IAAJ,CAASC,eAHf;AAAA;AAAA;AAAA;;AAAA,+CAIAJ,GAAG,CAACK,IAAJ,CAAS,gCAAT,CAJA;;AAAA;AAKV;;AALU,mBAOPJ,IAPO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAQDK,iBAAKC,OAAL,CAAa;AAACC,gBAAAA,QAAQ,EAAET,GAAG,CAACI,IAAJ,CAASC;AAApB,eAAb,EAAmDK,IAAnD,CAAwD,UAAAC,MAAM,EAAI;AACpE,oBAAI,CAACA,MAAL,EAAa;AACTT,kBAAAA,IAAI,GAAG,KAAP;AACA,yBAAOD,GAAG,CAACK,IAAJ,CAAS,yBAAT,CAAP;AACH;;AAAA;AACJ,eALK,WAMC,UAAAM,GAAG;AAAA,uBAAIC,OAAO,CAACC,KAAR,CAAc,QAAd,EAAuBF,GAAvB,CAAJ;AAAA,eANJ,CARC;;AAAA;AAeV;;AAfU,mBAiBPV,IAjBO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkBDK,iBAAKC,OAAL,CAAa;AAACC,gBAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,eAAb,EAAmCO,IAAnC,CAAwC,UAAAC,MAAM,EAAI;AACpD,qBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,WAAP,CAAmBC,MAAvC,EAA+CF,CAAC,EAAhD,EAAoD;AAChD,sBAAIJ,MAAM,CAACK,WAAP,CAAmBD,CAAnB,MAA0Bf,GAAG,CAACI,IAAJ,CAASC,eAAvC,EAAwD;AACpDH,oBAAAA,IAAI,GAAG,KAAP;AACA,2BAAOD,GAAG,CAACK,IAAJ,+CAAP;AACH;;AAAA;AACJ;;AAAA;AACJ,eAPK,WAQC,UAAAM,GAAG;AAAA,uBAAIC,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAqBN,GAArB,CAAJ;AAAA,eARJ,CAlBC;;AAAA;AA2BV;;AA3BU,mBA6BPV,IA7BO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA8BDK,iBAAKC,OAAL,CAAa;AAACC,gBAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,eAAb,EAAmCO,IAAnC,CAAwC,UAAAC,MAAM,EAAI;AACpD,qBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACQ,iBAAP,CAAyBF,MAA7C,EAAqDF,CAAC,EAAtD,EAA0D;AACtD,sBAAIJ,MAAM,CAACQ,iBAAP,CAAyBJ,CAAzB,MAAgCf,GAAG,CAACI,IAAJ,CAASC,eAA7C,EAA8D;AAC1DH,oBAAAA,IAAI,GAAG,KAAP;AACA,2BAAOD,GAAG,CAACK,IAAJ,WAAYN,GAAG,CAACI,IAAJ,CAASC,eAArB,2BAAP;AACH;;AAAA;AACJ;;AAAA;AACJ,eAPK,WAQC,UAAAO,GAAG;AAAA,uBAAIC,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAqBN,GAArB,CAAJ;AAAA,eARJ,CA9BC;;AAAA;AAuCV;;AAvCU,mBAyCPV,IAzCO;AAAA;AAAA;AAAA;;AAAA;AAAA,qBA0CDK,iBAAKC,OAAL,CAAa;AAACC,gBAAAA,QAAQ,EAAET,GAAG,CAACI,IAAJ,CAASC;AAApB,eAAb,EAAmDK,IAAnD,CAAwD,UAAAU,aAAa,EAAI;AAC3E,qBAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,aAAa,CAACD,iBAAd,CAAgCF,MAApD,EAA4DF,CAAC,EAA7D,EAAiE;AAC7D,sBAAIK,aAAa,CAACD,iBAAd,CAAgCJ,CAAhC,MAAuCf,GAAG,CAACG,IAA/C,EAAqD;AACjDD,oBAAAA,IAAI,GAAG,KAAP;AACA,2BAAOD,GAAG,CAACK,IAAJ,kCAAP;AACH;;AAAA;AACJ;;AAAA;AACJ,eAPK,WAQC,UAAAM,GAAG;AAAA,uBAAIC,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAqBN,GAArB,CAAJ;AAAA,eARJ,CA1CC;;AAAA;AAmDV;;AAED,kBAAIV,IAAJ,EAAU;AACNK,iCAAKc,gBAAL,CACI;AAACZ,kBAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,iBADJ,EAEI;AAACmB,kBAAAA,SAAS,EAAE;AAACC,oBAAAA,aAAa,EAAEvB,GAAG,CAACI,IAAJ,CAASC;AAAzB;AAAZ,iBAFJ,WAIO,UAAAO,GAAG;AAAA,yBAAIC,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAqBN,GAArB,CAAJ;AAAA,iBAJV;;AAMAL,iCAAKc,gBAAL,CACI;AAACZ,kBAAAA,QAAQ,EAAET,GAAG,CAACI,IAAJ,CAASC;AAApB,iBADJ,EAEI;AAACiB,kBAAAA,SAAS,EAAE;AAACH,oBAAAA,iBAAiB,EAAEnB,GAAG,CAACG;AAAxB;AAAZ,iBAFJ,EAICO,IAJD,CAIM,YAAM;AACR,sBAAIc,KAAK,qCAA8BxB,GAAG,CAACG,IAAlC,CAAT;;AACAsB,sCAAkBC,eAAlB,CAAkC1B,GAAG,CAACI,IAAJ,CAASC,eAA3C,EAA4D,EAA5D,EAAgEmB,KAAhE,EAAuEvB,GAAvE;;AACA,yBAAOA,GAAG,CAACK,IAAJ,CAAS,qBAAT,CAAP;AACH,iBARD,WASO,UAAAM,GAAG;AAAA,yBAAIC,OAAO,CAACK,GAAR,CAAY,QAAZ,EAAqBN,GAArB,CAAJ;AAAA,iBATV;AAUH;;AAAA;;AAtEU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADO;AA0EpBe,EAAAA,gBAAgB,EAAE,0BAAC3B,GAAD,EAAMC,GAAN,EAAc;AACxBY,IAAAA,OAAO,CAACK,GAAR,CAAYlB,GAAG,CAAC4B,KAAhB;;AACJ,QAAG5B,GAAG,CAAC4B,KAAJ,CAAUC,MAAV,KAAmB,QAAtB,EAAgC;AAC5BtB,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,OADJ,EAEI;AAACmB,QAAAA,SAAS,EAAE;AAACN,UAAAA,WAAW,EAAEhB,GAAG,CAAC4B,KAAJ,CAAUvB;AAAxB,SAAZ;AACAyB,QAAAA,KAAK,EAAE;AAACX,UAAAA,iBAAiB,EAAEnB,GAAG,CAAC4B,KAAJ,CAAUvB;AAA9B;AADP,OAFJ,WAIW,UAAAO,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAJd;;AAKAL,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAAC4B,KAAJ,CAAUvB;AAArB,OADJ,EAEI;AAACiB,QAAAA,SAAS,EAAE;AAACN,UAAAA,WAAW,EAAEhB,GAAG,CAACG;AAAlB,SAAZ;AACA2B,QAAAA,KAAK,EAAE;AAACP,UAAAA,aAAa,EAAEvB,GAAG,CAACG;AAApB;AADP,OAFJ,WAIW,UAAAS,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAJd;AAKH;;AAAA;;AACD,QAAGZ,GAAG,CAAC4B,KAAJ,CAAUC,MAAV,KAAmB,QAAtB,EAAgC;AAC5BtB,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,OADJ,EAEI;AAAC2B,QAAAA,KAAK,EAAE;AAACX,UAAAA,iBAAiB,EAAEnB,GAAG,CAAC4B,KAAJ,CAAUvB;AAA9B;AAAR,OAFJ,WAGW,UAAAO,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;;AAIAL,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAAC4B,KAAJ,CAAUvB;AAArB,OADJ,EAEI;AAACyB,QAAAA,KAAK,EAAE;AAACP,UAAAA,aAAa,EAAEvB,GAAG,CAACG;AAApB;AAAR,OAFJ,WAGW,UAAAS,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;AAIH;;AAAA;;AACD,QAAGZ,GAAG,CAAC4B,KAAJ,CAAUC,MAAV,KAAmB,UAAtB,EAAiC;AAC7BtB,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,OADJ,EAEI;AAAC2B,QAAAA,KAAK,EAAE;AAACd,UAAAA,WAAW,EAAEhB,GAAG,CAAC4B,KAAJ,CAAUvB;AAAxB;AAAR,OAFJ,WAGW,UAAAO,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;;AAIAL,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAAC4B,KAAJ,CAAUvB;AAArB,OADJ,EAEI;AAACyB,QAAAA,KAAK,EAAE;AAACd,UAAAA,WAAW,EAAEhB,GAAG,CAACG;AAAlB;AAAR,OAFJ,WAGW,UAAAS,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;AAIH;;AAAA;;AACD,QAAGZ,GAAG,CAAC4B,KAAJ,CAAUC,MAAV,KAAmB,QAAtB,EAA+B;AAC3BtB,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAACG;AAAf,OADJ,EAEI;AAAC2B,QAAAA,KAAK,EAAE;AAACP,UAAAA,aAAa,EAAEvB,GAAG,CAAC4B,KAAJ,CAAUvB;AAA1B;AAAR,OAFJ,WAGW,UAAAO,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;;AAIAL,uBAAKc,gBAAL,CACI;AAACZ,QAAAA,QAAQ,EAAET,GAAG,CAAC4B,KAAJ,CAAUvB;AAArB,OADJ,EAEI;AAACyB,QAAAA,KAAK,EAAE;AAACX,UAAAA,iBAAiB,EAAEnB,GAAG,CAACG;AAAxB;AAAR,OAFJ,WAGW,UAAAS,GAAG;AAAA,eAAIC,OAAO,CAACK,GAAR,CAAYN,GAAZ,CAAJ;AAAA,OAHd;AAIH;;AACDX,IAAAA,GAAG,CAACK,IAAJ,CAAS,UAAT;AAEH,GAxHmB;AAyHpByB,EAAAA,aAAa,EAAE,uBAAC/B,GAAD,EAAKC,GAAL,EAAW;AAClBM,qBAAKC,OAAL,CAAa;AAACC,MAAAA,QAAQ,EAACT,GAAG,CAACG;AAAd,KAAb,EAAkCO,IAAlC,CAAuC,UAACC,MAAD,EAAU;AAC7CV,MAAAA,GAAG,CAAC+B,MAAJ,CAAW,YAAX,EAAwB;AAAC,mBAAUrB,MAAM,CAACK,WAAlB;AAA8B,oBAAWL,MAAM,CAACQ,iBAAhD;AAAkE,gBAAOR,MAAM,CAACY,aAAhF;AAA8F,gBAAOvB,GAAG,CAACG;AAAzG,OAAxB;AACH,KAFD;AAGP;AA7HmB,CAAxB;AA+HA8B,MAAM,CAACC,OAAP,GAAepC,iBAAf","sourcesContent":["import User from '../model/user.model';\nimport messageController from '../controller/message.controller';\n\n\nconst friend_controller={\n        addFriend: async (req, res) => {\n        let flag = true;\n\n        if (req.user === req.body.friend_username) {\n            return res.send(\"Can't send request to yourself\");\n        };\n\n        if (flag) {\n            await User.findOne({username: req.body.friend_username}).then(result => {\n                if (!result) {\n                    flag = false;\n                    return res.send(\"Username doesn't exists\");\n                };\n            })\n            .catch(err => console.error('1 --> ',err));\n        };\n\n        if (flag) {\n            await User.findOne({username: req.user}).then(result => {\n                for (let i = 0; i < result.friend_list.length; i++) {\n                    if (result.friend_list[i] === req.body.friend_username) {\n                        flag = false;\n                        return res.send(`{req.body.friend_username} is already added`);\n                    };\n                };\n            })\n            .catch(err => console.log('2 --> ',err));\n        };\n\n        if (flag) {\n            await User.findOne({username: req.user}).then(result => {\n                for (let i = 0; i < result.received_requests.length; i++) {\n                    if (result.received_requests[i] === req.body.friend_username) {\n                        flag = false;\n                        return res.send(`${req.body.friend_username}'s request is pending`);\n                    };\n                };\n            })\n            .catch(err => console.log('2 --> ',err));\n        };\n\n        if (flag) {\n            await User.findOne({username: req.body.friend_username}).then(search_result => {\n                for (let i = 0; i < search_result.received_requests.length; i++) {\n                    if (search_result.received_requests[i] === req.user) {\n                        flag = false;\n                        return res.send(`Friend request is already sent`);\n                    };\n                };\n            })\n            .catch(err => console.log('3 --> ',err));\n        };\n\n        if (flag) {\n            User.findOneAndUpdate(\n                {username: req.user},\n                {$addToSet: {sent_requests: req.body.friend_username}\n            })\n            .catch(err => console.log('4 --> ',err));\n\n            User.findOneAndUpdate(\n                {username: req.body.friend_username},\n                {$addToSet: {received_requests: req.user}\n            })\n            .then(() => {\n                let title = `New friend request from ${req.user}`;\n                messageController.handle_requests(req.body.friend_username, '', title, res);\n                return res.send(\"Friend request sent\")\n            })\n            .catch(err => console.log('5 --> ',err));\n        };\n    },\n\n    respondToRequest: (req, res) => {\n            console.log(req.query);\n        if(req.query.action==='accept') {\n            User.findOneAndUpdate(\n                {username: req.user},\n                {$addToSet: {friend_list: req.query.friend_username},\n                $pull: {received_requests: req.query.friend_username}})\n                .catch(err => console.log(err));\n            User.findOneAndUpdate(\n                {username: req.query.friend_username},\n                {$addToSet: {friend_list: req.user},\n                $pull: {sent_requests: req.user}})\n                .catch(err => console.log(err));\n        };\n        if(req.query.action==='reject') {\n            User.findOneAndUpdate(\n                {username: req.user},\n                {$pull: {received_requests: req.query.friend_username}})\n                .catch(err => console.log(err));\n            User.findOneAndUpdate(\n                {username: req.query.friend_username},\n                {$pull: {sent_requests: req.user}})\n                .catch(err => console.log(err));\n        };\n        if(req.query.action==='unfriend'){\n            User.findOneAndUpdate(\n                {username: req.user},\n                {$pull: {friend_list: req.query.friend_username}})\n                .catch(err => console.log(err));\n            User.findOneAndUpdate(\n                {username: req.query.friend_username},\n                {$pull: {friend_list: req.user}})\n                .catch(err => console.log(err));\n        };\n        if(req.query.action==='cancel'){\n            User.findOneAndUpdate(\n                {username: req.user},\n                {$pull: {sent_requests: req.query.friend_username}})\n                .catch(err => console.log(err));\n            User.findOneAndUpdate(\n                {username: req.query.friend_username},\n                {$pull: {received_requests: req.user}})\n                .catch(err => console.log(err));\n        }\n        res.send('redirect');\n\n    },\n    getAllFriends: (req,res)=>{\n            User.findOne({username:req.user}).then((result)=>{\n                res.render('allFriends',{'friends':result.friend_list,'received':result.received_requests,'sent':result.sent_requests,'user':req.user})\n            })\n    }\n};\nmodule.exports=friend_controller;\n"],"file":"friend.controller.js"}