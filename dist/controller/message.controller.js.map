{"version":3,"sources":["../../src/controller/message.controller.js"],"names":["message_controller","handle_messages","req","res","flag","User","findOneAndUpdate","username","body","share_username","sender","user","shared_url","context","msg_body","comments","then","result","console","log","message","length","slice","payload","JSON","stringify","title","findOne","webpush","sendNotification","parse","subscription","err","error","reciever","status","send","handle_post_messages","receiver","url","getmsg","messages","name","received","received_messages","sent","sent_messages","render","module","exports"],"mappings":"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","sourcesContent":["import User from '../model/user.model';\nimport webpush from 'web-push';\n\nconst message_controller={\n    handle_messages: async function (req,res) {\n        let flag = false;\n        // console.log('body',req.body);\n        await User.findOneAndUpdate({username:req.body.share_username},{\n                    \"$push\": {\n                        \"received_messages\": {\n                            sender: req.body.user,\n                            shared_url: req.body.context,\n                            msg_body: req.body.comments\n                        }\n                    }\n                })\n                .then((result) => {\n                    if(result){\n                        console.log(\"receiver message saved\");\n                        // res.status(200).send('Message sent');\n                        let message = req.body.comments.length < 30 ? req.body.comments : req.body.comments.slice(0, 29) + '...';\n                        let payload = JSON.stringify({ \n                        title: `New message from ${req.body.user}`,\n                        msg_body: message\n                    });\n                    User.findOne({username: req.body.share_username}).then(result => {\n                        // console.log('sub_obj : ', JSON.parse(result.subscription));\n                        webpush.sendNotification(JSON.parse(result.subscription), payload)\n                    }).catch(err => console.error(err));\n                        flag = true;\n                    }else{\n                        // res.status(400).send(\"Username doesn't exist\");\n                        flag = false;\n                    }\n                })\n                .catch(err => console.log(err));\n\n            if (flag) {\n                User.findOneAndUpdate({username:req.body.user},{\n                    \"$push\": {\n                        \"sent_messages\": {\n                            reciever: req.body.share_username,\n                            shared_url: req.body.context,\n                            msg_body: req.body.comments\n                        }\n                    }\n                })\n                .then(() => {\n                    console.log('sender message saved');\n                    res.status(200).send('Message sent');\n                })\n                .catch(err => console.log(err));\n            } else {\n                res.status(400).send(\"Username doesn't exist\");\n            }\n    },\n\n    handle_post_messages : function (receiver, sender, url, body) {\n        User.findOneAndUpdate({username:receiver},{\n                    \"$push\": {\n                        \"received_messages\": {\n                            sender: sender,\n                            shared_url: url,\n                            msg_body: body\n                        }\n                    }\n                })\n                .then((result) => {\n                    if(result){\n                        console.log(\"receiver message saved\");\n                        let message = body.length < 30 ? body : body.slice(0, 29) + '...';\n                        let payload = JSON.stringify({ \n                        title: `New post from ${sender}`,\n                        msg_body: message\n                    });\n                    User.findOne({username: receiver}).then(result => {\n                        webpush.sendNotification(JSON.parse(result.subscription), payload)\n                        return;\n                    }).catch(err => console.error(err));\n                    }\n                })\n                .catch(err => console.log(err));\n            },\n\n    getmsg: function (req,res) {\n        let messages={};\n        User.findOne({username:req.user.name}).then((result)=>{\n            // console.log(result);\n            messages.received=result.received_messages;\n            messages.sent=result.sent_messages;\n            messages.username=req.user.name;\n            res.render('msg_inbox_outbox',{messages});\n        });\n            // res.render('msg_inbox_outbox',[{'sent':messages.sent},{'received':messages.received}]);\n\n    }\n};\nmodule.exports=message_controller;\n"],"file":"message.controller.js"}