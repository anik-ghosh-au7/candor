{"version":3,"sources":["../../src/controller/message.controller.js"],"names":["message_controller","handle_messages","req","res","isReceiver","isFriend","User","findOne","username","body","share_username","then","result","friend_list","forEach","friend","user","findOneAndUpdate","sender","shared_url","context","msg_body","comments","console","log","payload","JSON","stringify","title","subscription","element","webpush","sendNotification","parse","err","error","reciever","status","send","handle_post_comment_messages","receiver","url","message","length","slice","handle_requests","elem","getmsg","messages","name","received","received_messages","sent","sent_messages","others","other_messages","render","module","exports"],"mappings":"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","sourcesContent":["import User from '../model/user.model';\nimport webpush from 'web-push';\n\nconst message_controller = {\n    handle_messages: async function (req, res) {\n        let isReceiver = false;\n        let isFriend = false;\n        await User.findOne({username: req.body.share_username}).then(result => {\n            if (result) {\n                isReceiver = true;\n                result.friend_list.forEach((friend) => {\n                    if (friend === req.body.user) isFriend = true;\n                });\n                // console.log(result.friend_list,req.body.share_username);\n            }\n\n        });\n        // console.log(isFriend);\n        // console.log('body',req.body);\n        if (isFriend) {\n            await User.findOneAndUpdate({username: req.body.share_username}, {\n                \"$push\": {\n                    \"received_messages\": {\n                        sender: req.body.user,\n                        shared_url: req.body.context,\n                        msg_body: req.body.comments\n                    }\n                }\n            })\n                .then((result) => {\n                    if (result) {\n                        console.log(\"receiver message saved\");\n                        // res.status(200).send('Message sent');\n                        // let message = req.body.comments.length < 30 ? req.body.comments : req.body.comments.slice(0, 29) + '...';\n                        let payload = JSON.stringify({\n                            title: `New message from ${req.body.user}`,\n                            msg_body: req.body.comments\n                        });\n                        User.findOne({username: req.body.share_username}).then(result => {\n                            // console.log('sub_obj : ', JSON.parse(result.subscription));\n                            result.subscription.forEach(element => {\n                                webpush.sendNotification(JSON.parse(element), payload)\n                            });\n                        }).catch(err => console.error(err));\n                    }\n                })\n                .catch(err => console.log(err));\n        } else {\n            await User.findOneAndUpdate({username: req.body.share_username}, {\n                \"$push\": {\n                    \"other_messages\": {\n                        sender: req.body.user,\n                        shared_url: req.body.context,\n                        msg_body: req.body.comments\n                    }\n                }\n            }).then(() => console.log('msg saved in others')).catch(err => console.log(err));\n        }\n        ;\n\n        if (isReceiver) {\n            User.findOneAndUpdate({username: req.body.user}, {\n                \"$push\": {\n                    \"sent_messages\": {\n                        reciever: req.body.share_username,\n                        shared_url: req.body.context,\n                        msg_body: req.body.comments\n                    }\n                }\n            })\n                .then(() => {\n                    console.log('sender message saved');\n                    res.status(200).send('Message sent');\n                })\n                .catch(err => console.log(err));\n        } else {\n            res.status(400).send(\"Username doesn't exist\");\n        }\n    },\n\n    handle_post_comment_messages: function (receiver, sender, url, body, title) {\n        User.findOneAndUpdate({username: receiver}, {\n            \"$push\": {\n                \"received_messages\": {\n                    sender: sender,\n                    shared_url: url,\n                    msg_body: body\n                }\n            }\n        })\n            .then((result) => {\n                if (result) {\n                    console.log(\"receiver message saved\");\n                    let message = body.length < 30 ? body : body.slice(0, 29) + '...';\n                    let payload = JSON.stringify({\n                        title: title,\n                        msg_body: message\n                    });\n                    User.findOne({username: receiver}).then(result => {\n                        result.subscription.forEach(element => {\n                            webpush.sendNotification(JSON.parse(element), payload)\n                        });\n                        return;\n                    }).catch(err => console.error(err));\n                }\n            })\n            .catch(err => console.log(err));\n    },\n\n    handle_requests: function (receiver, body, title) {\n        User.findOne({username: receiver})\n            .then((result) => {\n                if (result.subscription) {\n                    let message = body;\n                    let payload = JSON.stringify({\n                        title: title,\n                        msg_body: message\n                    });\n                    result.subscription.forEach(elem => {\n                        webpush.sendNotification(JSON.parse(elem), payload)\n                    })\n                }\n            })\n            .catch(err => console.log(err));\n\n    },\n\n    getmsg: function (req, res) {\n        let messages = {};\n        User.findOne({username: req.user.name}).then((result) => {\n            // console.log(result);\n            messages.received = result.received_messages;\n            messages.sent = result.sent_messages;\n            messages.username = req.user.name;\n            messages.others = result.other_messages;\n            res.render('msg_inbox_outbox', {messages});\n        });\n        // res.render('msg_inbox_outbox',[{'sent':messages.sent},{'received':messages.received}]);\n\n    }\n};\nmodule.exports = message_controller;\n"],"file":"message.controller.js"}