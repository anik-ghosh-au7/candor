{"version":3,"sources":["../../src/validator/user.validator.js"],"names":["require","check","User","is_unique","data","type","obj","email","username","result","findOne","err","res","status","send","msg","console","log","user_validator","check_username","not","isEmpty","custom","Error","check_email","isEmail","check_password","check_phone","isMobilePhone","module","exports"],"mappings":"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","sourcesContent":["const {check} = require('express-validator');\nconst User = require('../model/user.model');\n\nconst is_unique = async (data, type) => {\n    if (type === 'email') {\n        obj = {email: data};\n    } else if (type === 'username') {\n        obj = {username: data};\n    }\n    result=null\n     await User.findOne(obj, (err, data) => {\n        if (err) {\n            // Internal server error\n            res.status(500).send({msg: \"Internal Server Error\"});\n        } else {\n            if (data === null) {\n                console.log('returning unique');\n                result=true;\n            } else {\n                console.log('returning not unique');\n                result=false;\n            }\n        }\n        ;\n    });\n    return result\n}\nconst user_validator = {};\nuser_validator.check_username = () => {\n    return check('username').not().isEmpty().custom(async username => {\n        result = await is_unique(username, 'username')\n        console.log(result)\n        if (!result) {\n            console.log('User name taken')\n            throw new Error('User name taken')\n        }\n        console.log('unique username')\n        return username;\n    })\n}\nuser_validator.check_email = () => {\n    return check('email').not().isEmpty().isEmail().custom(async email => {\n        result = await is_unique(email, 'email')\n        console.log(result)\n        if (!result) {\n            console.log('Email taken')\n            throw new Error('Email taken')\n        }\n        console.log('unique email')\n        return email;\n    })\n}\nuser_validator.check_password = () => {\n    return check('password').not().isEmpty();\n}\nuser_validator.check_phone = () => {\n    return check('phone').not().isEmpty().isMobilePhone();\n}\nmodule.exports = user_validator;"],"file":"user.validator.js"}