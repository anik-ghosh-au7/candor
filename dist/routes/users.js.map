{"version":3,"sources":["../../src/routes/users.js"],"names":["express","require","user_controller","jwt","config","userValidator","cloudUpload","authenticateToken","req","res","next","token","cookies","verify","process","env","jwt_key","err","data","status","send","msg","user","name","router","Router","post","request_otp","check_username","check_email","check_password","check_phone","createUser","login","get","loginPage","signPage","logout","submit_otp","module","exports"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAE,SAAF,CAAvB;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAE,+BAAF,CAA/B;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAE,cAAF,CAAnB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB;;AACA,IAAMC,aAAa,GAAGJ,OAAO,CAAC,6BAAD,CAA7B;;AACA,IAAMK,WAAW,GAAGL,OAAO,CAAC,iBAAD,CAA3B;;AAEA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5C,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,UAAZ,CAAd;;AACA,MAAI,CAACD,KAAL,EAAY;AACVD,IAAAA,IAAI;AACL,GAFD,MAEK;AACHP,IAAAA,GAAG,CAACU,MAAJ,CAAWF,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,OAA9B,EAAuC,UAACC,GAAD,EAAMC,IAAN,EAAe;AACtD,UAAID,GAAJ,EAAS,OAAOR,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,GAAG,EAAE;AAAN,OAArB,CAAP;AACTb,MAAAA,GAAG,CAACc,IAAJ,GAAWJ,IAAI,CAACK,IAAhB;AACAb,MAAAA,IAAI;AACL,KAJC;AAKD;AAGF,CAbD;;AAeA,IAAMc,MAAM,GAAGxB,OAAO,CAACyB,MAAR,EAAf;AAEAD,MAAM,CAACE,IAAP,CAAY,cAAZ,EAA2BxB,eAAe,CAACyB,WAA3C;AAEAH,MAAM,CAACE,IAAP,CAAY,aAAZ,EAA0BnB,iBAA1B,EAA6CD,WAA7C,EAA0D,CAACD,aAAa,CAACuB,cAAd,EAAD,EAAiCvB,aAAa,CAACwB,WAAd,EAAjC,EAA8DxB,aAAa,CAACyB,cAAd,EAA9D,EAA8FzB,aAAa,CAAC0B,WAAd,EAA9F,CAA1D,EAAsL7B,eAAe,CAAC8B,UAAtM;AAEAR,MAAM,CAACE,IAAP,CAAY,QAAZ,EAAqBnB,iBAArB,EAAwCL,eAAe,CAAC+B,KAAxD;AAEAT,MAAM,CAACU,GAAP,CAAW,YAAX,EAAwB3B,iBAAxB,EAA2CL,eAAe,CAACiC,SAA3D;AAEAX,MAAM,CAACU,GAAP,CAAW,WAAX,EAAuB3B,iBAAvB,EAA0CL,eAAe,CAACkC,QAA1D;AAEAZ,MAAM,CAACU,GAAP,CAAW,SAAX,EAAqBhC,eAAe,CAACmC,MAArC;AAEAb,MAAM,CAACU,GAAP,CAAW,aAAX,EAAyBhC,eAAe,CAACoC,UAAzC,E,CAIA;;AAEAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB","sourcesContent":["const express = require ('express');\nconst user_controller = require ('../controller/user.controller');\nconst jwt = require ('jsonwebtoken');\nrequire('dotenv').config();\nconst userValidator = require('../validator/user.validator');\nconst cloudUpload = require('../utils/multer');\n\nconst authenticateToken = (req, res, next) => {\n  const token = req.cookies['awtToken'];\n  if (!token) {\n    next()\n  }else{\n    jwt.verify(token, process.env.jwt_key, (err, data) => {\n    if (err) return res.status(403).send({msg: 'Unauthorized Forbidden'});\n    req.user = data.name;\n    next()\n  });\n  }\n\n\n};\n\nconst router = express.Router();\n\nrouter.post('/request_otp',user_controller.request_otp);\n\nrouter.post('/createuser',authenticateToken, cloudUpload, [userValidator.check_username(), userValidator.check_email(), userValidator.check_password(), userValidator.check_phone()], user_controller.createUser);\n\nrouter.post('/login',authenticateToken, user_controller.login);\n\nrouter.get('/loginPage',authenticateToken, user_controller.loginPage);\n\nrouter.get('/signPage',authenticateToken, user_controller.signPage);\n\nrouter.get('/logout',user_controller.logout);\n\nrouter.get('/submit_otp',user_controller.submit_otp);\n\n\n\n// router.post('/getposts', authenticateToken, user_controller.getposts)\n\nmodule.exports = router;\n"],"file":"users.js"}